buildscript {
    ext.kotlin_version = '1.2.30'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }
}

group 'com.example.kata'
version '0.0.1-SNAPSHOT'

ext.log4jVersion = '2.9.0'
ext.junitplatformversion = '1.0.0-M4'
ext.junitVersion = '5.0.0-M4' // need to keep it at this version for intellij idea (as of 2018-03-03)
ext.fuel_version = '1.12.1'
ext.jacksonVersion = '2.9.4'

apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    mavenCentral()
    jcenter()
    jcenter { url "https://jcenter.bintray.com/com.github.kittinunf" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // web framework
    compile 'com.sparkjava:spark-kotlin:1.0.0-alpha'
    compile 'org.slf4j:slf4j-simple:1.7.21'

    testCompile "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testCompile 'org.assertj:assertj-core:3.9.0'
    testRuntime "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    testRuntime "org.apache.logging.log4j:log4j-jul:${log4jVersion}"
    testCompile "org.junit.platform:junit-platform-runner:${junitplatformversion}"
    testCompile 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0-RC1'

    compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}"


    compile "io.arrow-kt:arrow-core:0.6.1"

    // REST Client
    testCompile "com.github.kittinunf.fuel:fuel:${fuel_version}"
    testCompile "com.github.kittinunf.fuel:fuel-jackson:${fuel_version}"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

junitPlatform {
    // platformVersion '1.1.0'
    filters {
        engines {
            // include 'junit-jupiter', 'junit-vintage'
            // exclude 'custom-engine'
        }
        tags {
            // include 'fast'
            exclude 'slow'
        }
        includeClassNamePattern '.*Should.*'
        includeClassNamePattern '.*Feature.*'
//        excludeClassNamePattern '.*'
    }
    // enableStandardTestTask true
    // reportsDir file('build/test-results/junit-platform') // this is the default
    logManager 'org.apache.logging.log4j.jul.LogManager'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

//https://stackoverflow.com/questions/19990716/how-to-ignore-a-specific-transitive-dependency-from-all-dependencies-in-gradle#19991364
// Ignore the transitive dependency from com.fasterxml.jackson, that brings kotlin-reflect that uses jdk7
configurations {
//    compile.exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
}

tasks.create(name: 'gitExecutableHooks') << {
    Runtime.getRuntime().exec("cp -R bin/hooks .git")
    Runtime.getRuntime().exec("chmod -R +x .git/hooks/")
}

build.dependsOn gitExecutableHooks